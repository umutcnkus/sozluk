{"version":3,"sources":["components/word-card/WordCard.tsx","helpers/ApiHelper.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WordCard","props","state","definitions","word","this","match","params","wordToSearch","decodeURIComponent","getDefinition","fetch","basePath","then","response","json","data","setState","anlamlarListe","map","anlam","text","toLowerCase","className","definition","i","React","Component","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAgBaA,EAAb,kDAEI,WAAYC,GAAuB,IAAD,8BAC9B,cAAMA,IACDC,MAAQ,CACTC,YAAa,GACbC,KAAM,IAJoB,EAFtC,qDAUI,WACI,IAAQA,EAASC,KAAKJ,MAAMK,MAAMC,OAA1BH,KACFI,EAAeC,mBAAmBL,GACxCC,KAAKK,cAAcF,KAb3B,gCAgBI,WACIH,KAAKK,cAAcL,KAAKH,MAAME,QAjBtC,2BAoBI,SAAcA,GAAe,IAAD,QClCH,SAACA,GAE1B,OAAOO,MADYC,iCAAwBR,GAEtCS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDgC3BL,CAAcN,GAAMS,MAChB,SAACG,GACG,IACI,EAAKC,SAAS,CACVd,YAAaa,EAAK,GAAGE,cAAcC,KAAI,SAACC,GACpC,MAAO,CACHC,KAAMD,EAAMA,UAGpBhB,KAAMA,EAAKkB,gBAGnB,SACI,EAAKL,SAAS,CAAEb,KAAM,eAlC1C,oBAwCI,WACI,OACI,qBAAKmB,UAAU,sBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BlB,KAAKH,MAAME,SAE3C,qBAAKmB,UAAU,cAAf,SACKlB,KAAKH,MAAMC,YAAYgB,KAAI,SAACK,EAAYC,GAAb,OACxB,sBAAKF,UAAU,uBAAf,UACI,sBAAKA,UAAU,oBAAf,UAAoCE,EAAI,EAAxC,QACA,sBAAKF,UAAU,kBAAf,UAAkCC,EAAWH,KAA7C,wBAnDhC,GAA8BK,IAAMC,W,eEArBC,MAXf,SAASA,IACP,OACE,qBAAKL,UAAU,MAAf,SACE,eAAC,IAAD,CAAYM,SAAS,UAArB,UACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWhC,IACvC,cAAC,IAAD,CAAO8B,KAAK,IAAIC,OAAK,EAACC,UAAWJ,UCI1BK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8732f628.chunk.js","sourcesContent":["import React from 'react';\nimport { getDefinition } from '../../helpers/ApiHelper';\nimport { WordDefinition } from '../../models/interfaces';\nimport { RouteComponentProps } from 'react-router-dom'\nimport './WordCard.css';\n\nexport interface OnboardingPageRouterProps {\n    word: string\n}\nexport interface WordCardProps extends RouteComponentProps<OnboardingPageRouterProps> { }\n\nexport interface WordCardState {\n    definitions: WordDefinition[];\n    word: string;\n}\n\nexport class WordCard extends React.Component<WordCardProps, WordCardState> {\n\n    constructor(props: WordCardProps) {\n        super(props);\n        this.state = {\n            definitions: [],\n            word: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const { word } = this.props.match.params;\n        const wordToSearch = decodeURIComponent(word);\n        this.getDefinition(wordToSearch)\n    }\n\n    componentDidUpdate() {\n        this.getDefinition(this.state.word);\n    }\n\n    getDefinition(word: string) {\n        getDefinition(word).then(\n            (data: any) => {\n                try {\n                    this.setState({\n                        definitions: data[0].anlamlarListe.map((anlam: { anlam: any; }) => {\n                            return {\n                                text: anlam.anlam\n                            }\n                        }),\n                        word: word.toLowerCase()\n                    })\n                }\n                catch {\n                    this.setState({ word: \"hata\" })\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"word-card-container\">\n                <div className=\"inner-box\">\n                    <div className=\"title-container\">\n                        <h3 className=\"word-title\">{this.state.word}</h3>\n                    </div>\n                    <div className=\"definitions\">\n                        {this.state.definitions.map((definition, i) => (\n                            <div className=\"definition-container\">\n                                <div className=\"definition-number\">{i + 1}. </div>\n                                <div className=\"definition-text\">{definition.text} </div>\n                            </div>\n                        ))\n\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import { basePath } from '../config'\n\nexport const getDefinition = (word: string) => {\n    const requestUrl = basePath + \"gts?ara=\" + word;\n    return fetch(requestUrl)\n        .then(response => response.json())\n}","import React from 'react';\nimport './App.css';\nimport { WordCard } from './components/word-card/WordCard';\nimport { BrowserRouter as HashRouter, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename='/sozluk'>\n        <Route path=\"/:word/\" exact component={WordCard} />\n        <Route path=\"/\" exact component={App} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}