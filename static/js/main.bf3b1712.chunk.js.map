{"version":3,"sources":["components/word-card/WordCard.tsx","helpers/ApiHelper.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WordCard","props","state","definitions","word","this","searchWordFromUrl","window","addEventListener","e","match","params","wordToSearch","decodeURIComponent","getDefinition","fetch","basePath","then","response","json","data","setState","anlamlarListe","map","anlam","text","toLowerCase","className","definition","i","React","Component","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAgBaA,EAAb,kDAEI,WAAYC,GAAuB,IAAD,8BAC9B,cAAMA,IACDC,MAAQ,CACTC,YAAa,GACbC,KAAM,IAJoB,EAFtC,qDAUI,WAAqB,IAAD,OAChBC,KAAKC,oBACLC,OAAOC,iBAAiB,cAAc,SAACC,GAAD,OAAO,EAAKH,yBAZ1D,+BAeI,WACI,IAAQF,EAASC,KAAKJ,MAAMS,MAAMC,OAA1BP,KACFQ,EAAeC,mBAAmBT,GACxCC,KAAKS,cAAcF,KAlB3B,2BAqBI,SAAcR,GAAe,IAAD,QCnCH,SAACA,GAE1B,OAAOW,MADYC,iCAAwBZ,GAEtCa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDiC3BL,CAAcV,GAAMa,MAChB,SAACG,GACG,IACI,EAAKC,SAAS,CACVlB,YAAaiB,EAAK,GAAGE,cAAcC,KAAI,SAACC,GACpC,MAAO,CACHC,KAAMD,EAAMA,UAGpBpB,KAAMA,EAAKsB,gBAGnB,SACI,EAAKL,SAAS,CAAEjB,KAAM,SACtB,EAAKU,cAAc,cApCvC,oBA0CI,WACI,OACI,qBAAKa,UAAU,sBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BtB,KAAKH,MAAME,SAE3C,qBAAKuB,UAAU,cAAf,SACKtB,KAAKH,MAAMC,YAAYoB,KAAI,SAACK,EAAYC,GAAb,OACxB,sBAAKF,UAAU,uBAAf,UACI,sBAAKA,UAAU,oBAAf,UAAoCE,EAAI,EAAxC,QACA,sBAAKF,UAAU,kBAAf,UAAkCC,EAAWH,KAA7C,wBArDhC,GAA8BK,IAAMC,W,eEArBC,MAXf,SAASA,IACP,OACE,qBAAKL,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,KAAK,UAAUC,OAAK,EAACC,UAAWnC,IACvC,cAAC,IAAD,CAAOiC,KAAK,IAAIC,OAAK,EAACC,UAAWH,UCI1BI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf3b1712.chunk.js","sourcesContent":["import React from 'react';\r\nimport { getDefinition } from '../../helpers/ApiHelper';\r\nimport { WordDefinition } from '../../models/interfaces';\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport './WordCard.css';\r\n\r\nexport interface OnboardingPageRouterProps {\r\n    word: string\r\n}\r\nexport interface WordCardProps extends RouteComponentProps<OnboardingPageRouterProps> { }\r\n\r\nexport interface WordCardState {\r\n    definitions: WordDefinition[];\r\n    word: string;\r\n}\r\n\r\nexport class WordCard extends React.Component<WordCardProps, WordCardState> {\r\n\r\n    constructor(props: WordCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            definitions: [],\r\n            word: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.searchWordFromUrl();\r\n        window.addEventListener(\"hashchange\", (e) => this.searchWordFromUrl())\r\n    }\r\n\r\n    searchWordFromUrl(){\r\n        const { word } = this.props.match.params;\r\n        const wordToSearch = decodeURIComponent(word);\r\n        this.getDefinition(wordToSearch)\r\n    }\r\n\r\n    getDefinition(word: string) {\r\n        getDefinition(word).then(\r\n            (data: any) => {\r\n                try {\r\n                    this.setState({\r\n                        definitions: data[0].anlamlarListe.map((anlam: { anlam: any; }) => {\r\n                            return {\r\n                                text: anlam.anlam\r\n                            }\r\n                        }),\r\n                        word: word.toLowerCase()\r\n                    })\r\n                }\r\n                catch {\r\n                    this.setState({ word: \"hata\" });\r\n                    this.getDefinition(\"hata\")\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"word-card-container\">\r\n                <div className=\"inner-box\">\r\n                    <div className=\"title-container\">\r\n                        <h3 className=\"word-title\">{this.state.word}</h3>\r\n                    </div>\r\n                    <div className=\"definitions\">\r\n                        {this.state.definitions.map((definition, i) => (\r\n                            <div className=\"definition-container\">\r\n                                <div className=\"definition-number\">{i + 1}. </div>\r\n                                <div className=\"definition-text\">{definition.text} </div>\r\n                            </div>\r\n                        ))\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import { basePath } from '../config'\r\n\r\nexport const getDefinition = (word: string) => {\r\n    const requestUrl = basePath + \"gts?ara=\" + word;\r\n    return fetch(requestUrl)\r\n        .then(response => response.json())\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { WordCard } from './components/word-card/WordCard';\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route path=\"/:word/\" exact component={WordCard} />\r\n        <Route path=\"/\" exact component={App} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}